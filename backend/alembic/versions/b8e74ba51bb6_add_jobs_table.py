"""add jobs table"""
from alembic import op
import sqlalchemy as sa

from app.models import GUID

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b8e74ba51bb6'
down_revision = '0004_add_priority_factors'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('job_type', sa.String(), nullable=False),
    sa.Column('result', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('connectors', 'scopes',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='scopes::text::json')
    op.drop_index(op.f('idx_connectors_user_kind'), table_name='connectors')
    op.drop_index(op.f('idx_task_links_child'), table_name='task_links')
    op.drop_index(op.f('idx_task_links_parent'), table_name='task_links')
    horizon_enum = postgresql.ENUM('today', 'week', 'month', 'past7d', name='horizonenum')
    horizon_enum.create(op.get_bind())
    op.alter_column('tasks', 'horizon',
               existing_type=sa.VARCHAR(),
               type_=horizon_enum,
               existing_nullable=False,
               postgresql_using='horizon::horizonenum')
    op.execute("ALTER TABLE tasks ALTER COLUMN status DROP DEFAULT")
    status_enum = postgresql.ENUM('todo', 'in_progress', 'done', 'scheduled', name='statusenum')
    status_enum.create(op.get_bind())
    op.alter_column('tasks', 'status',
               existing_type=sa.VARCHAR(),
               type_=status_enum,
               existing_nullable=False,
               postgresql_using='status::statusenum')
    op.execute("ALTER TABLE tasks ALTER COLUMN status SET DEFAULT 'todo'")
    op.drop_index(op.f('idx_tasks_user_horizon_status'), table_name='tasks')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_tasks_user_horizon_status'), 'tasks', ['user_id', 'horizon', 'status', 'priority'], unique=False)
    op.alter_column('tasks', 'status',
               existing_type=sa.Enum('todo', 'in_progress', 'done', 'scheduled', name='statusenum'),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               existing_server_default=sa.text("'todo'::character varying"))
    op.alter_column('tasks', 'horizon',
               existing_type=sa.Enum('today', 'week', 'month', 'past7d', name='horizonenum'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.create_index(op.f('idx_task_links_parent'), 'task_links', ['parent'], unique=False)
    op.create_index(op.f('idx_task_links_child'), 'task_links', ['child'], unique=False)
    op.create_index(op.f('idx_connectors_user_kind'), 'connectors', ['user_id', 'kind'], unique=False)
    op.alter_column('connectors', 'scopes',
               existing_type=sa.JSON(),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=True)
    op.drop_table('jobs')
    # ### end Alembic commands ###
